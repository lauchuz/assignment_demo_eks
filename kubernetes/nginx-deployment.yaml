apiVersion: v1
kind: Namespace
metadata:
  name: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: nginx
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true" # Enable scraping
        prometheus.io/port: "9113"  # Metrics port
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest # Use the latest version of nginx
        env:
        - name: DB_HOST
          value: "mysql.nginx.svc.cluster.local" # Service name of MySQL
        - name: DB_USER
          value: "root"
        - name: DB_PASSWORD
          value: "rootpassword"
        - name: DB_NAME
          value: "mydatabase"
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: nginx-config
      - name: nginx-prometheus-exporter
        image: nginx/nginx-prometheus-exporter:0.10.0 # Prometheus Exporter
        args:
        - -nginx.scrape-uri=http://127.0.0.1:80/status # Path to scrape metrics
        ports:
        - containerPort: 9113 # Expose metrics on this port
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: nginx
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        # Enable status metrics
        location /status {
            stub_status;
            allow all; # Allow all for simplicity, adjust as needed
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: nginx
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9113" # Metrics port
spec:
  selector:
    app: nginx
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  - name: metrics
    protocol: TCP
    port: 9113
    targetPort: 9113
  type: LoadBalancer
